{"version":3,"sources":["theme.js","components/info-box.js","components/helper-text.js","components/base-text-input.js","components/date-masked-input.js","helpers/is-leap-year.js","helpers/is-valid-date.js","helpers/get-day-number.js","helpers/get-number-of-leap-years.js","helpers/get-day-difference.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","type","primary","indigo","secondary","deepOrange","text","fade","info","light","lightBlue","main","dark","contrastText","error","useStyles","makeStyles","root","padding","spacing","backgroundColor","grey","borderRadius","shape","display","color","icon","width","content","lineHeight","InfoIcon","props","SvgIcon","d","InfoBox","variant","children","classes","className","clsx","HelperText","helperText","Fade","in","undefined","inputRoot","minWidth","transition","transitions","create","easing","easeOut","inputError","boxShadow","marginTop","BaseFilledInput","name","label","other","FormControl","InputLabel","htmlFor","FilledInput","disableUnderline","autoComplete","DateTextInput","inputRef","ref","inputElement","mask","isLeapYear","yearNumber","year","Number","requiredDateSize","length","isValidDate","dateString","isValidDayString","month","date","split","map","day","days","isValidDay","isStartDateLessThanEndDate","dateString1","dateString2","reverse","join","accumulatedDays","getDayNumber","dayNumber","leapYearsBefore","getNumberOfLeapYears","year1","year2","Math","ceil","getDayDifference","validated","startDate","endDate","date1","date2","month1","month2","day1","day2","differenceInDays","isStartLeapYear","isEndLeapYear","startDayNumber","endDayNumber","fromYear","toYear","totalYearsBetween","totalLeapYears","daysInCommonYears","daysInLeapYears","justifyContent","maxWidth","margin","dates","flexDirection","breakpoints","up","flex","marginBottom","marginRight","buttons","alignItems","results","Home","initialStates","isStartDateValid","isEndDateValid","isStartDateTouched","isEndDateTouched","useState","state","setState","showStartDateError","showEndDateError","AppBar","position","Toolbar","Typography","inputComponent","value","onChange","event","target","onBlur","Button","onClick","gutterBottom","require","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f903ebb4.chunk.js","sourcesContent":["import { createMuiTheme, fade } from '@material-ui/core/styles';\nimport { lightBlue, deepOrange, indigo } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: indigo,\n      secondary: deepOrange,\n      text: {\n        primary: '#59595c',\n        secondary: fade('#6d6e70', .8),\n      },\n      info: {\n        light: lightBlue[300],\n        main: lightBlue[500],\n        dark: lightBlue[800],\n        contrastText: '#fff',\n      },\n      error: {\n        light: deepOrange[300],\n        main: deepOrange[500],\n        dark: deepOrange[700],\n        contrastText: '#fff',\n      },\n    },\n  });\n\n  export default theme;\n  ","import React from 'react';\nimport { SvgIcon } from '@material-ui/core';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[100],\n    borderRadius: theme.shape.borderRadius,\n    display: 'flex',\n    '&.info': {\n      color: theme.palette.info.dark,\n      backgroundColor: fade(theme.palette.info.light, 0.2),\n    },\n    '&.alert': {\n      color: theme.palette.error.dark,\n      backgroundColor: fade(theme.palette.error.light, 0.2),\n    },\n  },\n  icon: {\n    color: 'inherit',\n    width: 32,\n    display: 'flex',\n  },\n  content: {\n    lineHeight: 1.5,\n  },\n}));\n\nconst InfoIcon = props => (\n  <SvgIcon {...props}>\n    <path d='M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z' />\n  </SvgIcon>\n);\n\nconst InfoBox = ({ variant, children }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, variant)}>\n      <div className={classes.icon}>\n        <InfoIcon />\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nInfoBox.propTypes = {\n  variant: PropTypes.oneOf(['info', 'alert']),\n};\n\nexport default InfoBox;\n","import React from 'react';\nimport { Fade } from '@material-ui/core';\nimport InfoBox from 'components/info-box';\n\nconst HelperText = ({ error, helperText }) => (\n  <Fade in={helperText !== undefined && helperText !== null}>\n    <div>\n      <InfoBox variant={error ? 'alert' : 'info'}>{helperText}</InfoBox>\n    </div>\n  </Fade>\n);\n\nexport default HelperText;\n","import React from 'react';\nimport { InputLabel, FilledInput, FormControl } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HelperText from 'components/helper-text';\n\nconst useStyles = makeStyles(theme => ({\n  inputRoot: {\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.grey[100],\n    minWidth: 120,\n    transition: theme.transitions.create('all', {\n      easing: theme.transitions.easing.easeOut,\n    }),\n    '&:before, &:after': {\n      display: 'none',\n    },\n  },\n  inputError: {\n    backgroundColor: '#fff5f5',\n    boxShadow: '0 0 0 2px #ff6b81',\n  },\n  helperText: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst BaseFilledInput = ({ name, label, error, helperText, ...other }) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl variant=\"filled\">\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <FilledInput\n        disableUnderline\n        error={error}\n        classes={{\n          root: classes.inputRoot,\n          error: classes.inputError,\n        }}\n        autoComplete=\"no\"\n        {...other}\n      />\n      {helperText && (\n        <div className={classes.helperText}>\n          <HelperText error={error} helperText={helperText} />\n        </div>\n      )}\n    </FormControl>\n  );\n};\n\nexport default BaseFilledInput;\n","import React from 'react';\nimport MaskedInput from 'react-input-mask';\n\nconst DateTextInput = ({ inputRef, ...other}) => {\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask=\"99 99 9999\"\n    />\n  );\n}\n\nexport default DateTextInput;\n","/**\n * determine whether given year is a leap year\n * https://en.wikipedia.org/wiki/Leap_year\n * Every year that is exactly divisible by 4 is a leap year,\n * except for years that are exactly divisible by 100, \n * but these centurial years are leap years if they are exactly divisible by 400. \n * For example, the years 1700, 1800, and 1900 are not leap years, but the years 1600 and 2000 are. \n * @param yearNumber\n * @returns bool - whether the given year is a leap year\n */\n\nconst isLeapYear = yearNumber => {\n  let year = yearNumber;\n  if (typeof year !== 'number') {\n    year = Number(year);\n  }\n\n  return year % 100 === 0 ? year % 400 === 0 : year % 4 === 0;\n}\n\nexport default isLeapYear;\n\n","import isLeapYear from './is-leap-year';\n\nconst requiredDateFormat = \"DD MM YYYY\";\nconst requiredDateSize = requiredDateFormat.length;\n\n// check the given date string is valid\nexport const isValidDayString = dateString => dateString && dateString.length === requiredDateSize;\n\n// min year 1900 max year 2010\nconst isValidYear = year => year >= 1900 && year <=2010;\nconst isValidMonth = month => month > 0 && month <= 12;\nconst isValidDay = (year, month, day) => {\n  let days = 0;\n  switch(month) {\n    case 2:\n      if (isLeapYear(year)) {\n        days = 29;\n      } else {\n        days = 28;\n      }\n      break;\n    // months with 31 days\n    case 1: case 3: case 5: case 7: case 8: case 10: case 12:\n      days = 31;\n      break;\n    // rest of months with 30 days\n    default:\n      days = 30;\n      break;\n  }\n\n  return day > 0 && day <= days;\n}\n\nexport const isValidDate = dateString => {\n  if (!isValidDayString(dateString)) return false;\n  const date = dateString.split(' ').map(Number);\n  return isValidDay(date[2], date[1], date[0]) && isValidMonth(date[1]) && isValidYear(date[2]);\n}\n\n// use to arrange the order of two dates\nexport const isStartDateLessThanEndDate = (dateString1, dateString2) => {\n  if (!isValidDate(dateString1) || !isValidDate(dateString2)) return false;\n\n  // convert input string format of 'DD MM YYYY' to YYYYMMDD for comparison \n  let date1 = Number(dateString1.split(' ').reverse().join(''));\n  let date2 = Number(dateString2.split(' ').reverse().join(''));\n\n  if (date1 <= date2) {\n    return true;\n  }\n\n  return false;\n}\n","/**\n * daysInMonths is an array that records days accumulated each month in common years\n * const daysInMonths = [31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n */\n const accumulatedDays = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\n export const getDayNumber = (month, day, isLeapYear) => {\n  let dayNumber = accumulatedDays[month - 1] + day;\n  if (isLeapYear && dayNumber > 59) {\n    dayNumber +=1;\n  }\n  return dayNumber;\n }\n\n export default getDayNumber;\n","/**\n * Follow the rules of leap year\n * 1. can be divisible by 4 but not by 100\n * 2. can be divisible by 400\n * \n * work out the total leap years from 0 to startYear (exclusive start year)\n * work out the total leap years from 0 to endYear\n * use endNumber - startNumber will be the total leap years between two given years\n */\nconst leapYearsBefore = year => year / 4 - year / 100 + year / 400;\nconst getNumberOfLeapYears = (year1, year2) => Math.ceil(leapYearsBefore(year2) - leapYearsBefore(year1 - 1));\n\nexport default getNumberOfLeapYears;\n","import { isStartDateLessThanEndDate, isValidDate } from './is-valid-date';\nimport isLeapYear from './is-leap-year';\nimport getDayNumber from './get-day-number';\nimport getNumberOfLeapYears from './get-number-of-leap-years';\n\nconst getDayDifference = (dateString1, dateString2, validated = false) => {\n  let startDate = dateString1;\n  let endDate = dateString2;\n\n  // if dayStrings haven't been validated beforehand\n  if (!validated && (!isValidDate(startDate) || !isValidDate(endDate))) return 'Invalid output, please check your inputs';\n\n  // check date order, startDate must be less than endDate for the following calculations to work\n  if (!isStartDateLessThanEndDate(startDate, endDate)) {\n    startDate = dateString2;\n    endDate = dateString1;\n  }\n\n  const date1 = startDate.split(' ').map(Number);\n  const date2 = endDate.split(' ').map(Number);\n\n  const year1 = date1[2];\n  const year2 = date2[2];\n\n  const month1 = date1[1];\n  const month2 = date2[1];\n\n  const day1 = date1[0];\n  const day2 = date2[0];\n\n  let differenceInDays = 0;\n\n  const isStartLeapYear = isLeapYear(year1);\n  const isEndLeapYear = isLeapYear(year2);\n\n  // get the day number of start and end date\n  const startDayNumber = getDayNumber(month1, day1, isStartLeapYear);\n  const endDayNumber = getDayNumber(month2, day2, isEndLeapYear);\n\n  // if dates are from the same year,\n  // we only need to know the difference between the endDayNumber and startDayNUmber\n  if (year1 === year2) {\n    differenceInDays = endDayNumber - startDayNumber;\n  } else {\n    // calculate the days from start date to the end of year, total number of the start year - day number of start date\n    // and the days from the beginning of the year to end date which is the day number of the end date\n    differenceInDays = (isStartLeapYear ? 366 : 365) - startDayNumber + endDayNumber;\n    // if the difference between two given years is more than 1 year\n    if (year2 - year1 > 1) {\n      // fromYear and toYear defines the range between the two given years\n      const fromYear = year1 + 1;\n      const toYear = year2;\n      const totalYearsBetween = toYear - fromYear;\n      const totalLeapYears = getNumberOfLeapYears(fromYear, toYear);\n      // total days in common years\n      const daysInCommonYears = (totalYearsBetween - totalLeapYears) * 365;\n      // total days in leap years\n      const daysInLeapYears = totalLeapYears * 366; \n      differenceInDays += daysInCommonYears + daysInLeapYears;\n    }\n  }\n\n  // alterative way to calculate days inside the range between the two given years\n  // for (var i = year1 + 1; i <= year2 - 1; i++) {\n  //   if (isLeapYear(i)) {\n  //     differenceInDays += 366;\n  //   } else {\n  //     differenceInDays += 365;\n  //   }\n  // }\n\n  return `${startDate}, ${endDate}, ${differenceInDays}`;\n}\n\nexport default getDayDifference;","import React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, Fade } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport BaseTextInput from 'components/base-text-input';\nimport DateTextInput from 'components/date-masked-input';\nimport InfoBox from 'components/info-box';\nimport { isValidDate } from 'helpers/is-valid-date';\nimport getDayDifference from 'helpers/get-day-difference';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  content: {\n    maxWidth: 1200,\n    width: '100%',\n    margin: theme.spacing(2, 4),\n  },\n  dates: {\n    margin: theme.spacing(2, 0),\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('sm')]: {\n      flexDirection: 'row',\n    },\n    '& > *': {\n      flex: '1 1 auto',\n    },\n    '& > *:not(:last-child)': {\n      marginBottom: theme.spacing(1),\n      [theme.breakpoints.up('sm')]: {\n        marginRight: theme.spacing(2),\n        marginBottom: 0,\n      },\n    },\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      maxWidth: 256,\n      width: '100%',\n      '&:not(last-child)': {\n        marginBottom: theme.spacing(1),\n      },\n    },\n  },\n  results: {\n    padding: theme.spacing(2, 3),\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const initialStates = {\n    startDate: '',\n    endDate: '',\n    isStartDateValid: false,\n    isEndDateValid: false,\n    isStartDateTouched: false,\n    isEndDateTouched: false,\n    results: null,\n  };\n  const [state, setState] = useState(initialStates);\n  const { startDate, endDate, isStartDateValid, isEndDateValid, isStartDateTouched, isEndDateTouched, results} = state;\n  const showStartDateError = isStartDateTouched && !isStartDateValid;\n  const showEndDateError = isEndDateTouched && !isEndDateValid;\n\n  // reset to initial states\n  const onClear = () => setState(initialStates);\n\n  const onCalculateDates = () => {\n    if (!isStartDateValid || !isStartDateValid) return;\n    // calculate the day difference\n    setState({ ...state, results: getDayDifference(startDate, endDate, true) })\n  }\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">Date Difference</Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.root}>\n        <div className={classes.content}>\n          <InfoBox variant=\"info\">\n            <Typography>Calculate the difference between two dates</Typography>\n            <Typography variant=\"caption\">Date format: DD MM YYYY, Date Range: 1900 to 2010</Typography>\n          </InfoBox>\n          <form>\n            <div className={classes.dates}>\n              <BaseTextInput\n                label=\"Date 1\"\n                inputComponent={DateTextInput}\n                value={startDate}\n                onChange={event => {\n                  const { value } = event.target;\n                  setState({ ...state, startDate: value });\n                  if (value && !isStartDateTouched) {\n                    setState({ ...state, isStartDateTouched: true });\n                  }\n                }}\n                onBlur={event => {\n                  const { value } = event.target;\n                  if (!value) return;\n                  setState({ ...state, isStartDateValid: isValidDate(value) });\n                }}\n                error={showStartDateError}\n                helperText={showStartDateError ? 'Invalid date format' : null}\n              />\n              <BaseTextInput\n                label=\"Date 2\"\n                inputComponent={DateTextInput}\n                value={endDate}\n                onChange={event => { \n                  setState({ ...state, endDate: event.target.value });\n                  if (!isEndDateTouched) {\n                    setState({ ...state, isEndDateTouched: true });\n                  }\n                }}\n                onBlur={event => {\n                  const { value } = event.target;\n                  if (!value) return;\n                  setState({ ...state, isEndDateValid: isValidDate(value) });\n                }}\n                error={showEndDateError}\n                helperText={showEndDateError ? 'Invalid date format' : null}\n              />\n            </div>\n            <div className={classes.buttons}>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={onCalculateDates}\n              >\n                Go\n              </Button>\n              <Button onClick={onClear}>\n                Reset\n              </Button>\n            </div>\n          </form>\n          {results !== null && (\n            <Fade in={results !== null}>\n              <div className={classes.results}>\n                <Typography gutterBottom variant=\"h6\" color=\"textSecondary\">Output</Typography>\n                <Typography variant=\"h6\">{results}</Typography>\n              </div>\n            </Fade>\n          )}\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import { ThemeProvider } from '@material-ui/core/styles';\nimport theme from 'theme';\nimport Home from 'pages/home';\n\nrequire('typeface-roboto');\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Home />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}